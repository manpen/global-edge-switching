
benchmark_executable="$1"

bench_dir="benchmark-results"
if ! test -d "$bench_dir"
then
 mkdir "$bench_dir"
fi

spe=1
repeats=1

for algo in "robin" "naive" "global-naive" "global" "global-no-wait" ; do
 for p in 1 2 4 8 16 32 64 ; do
  if test "$algo" == "robin" ; then
   if test "$p" != 1 ; then
    break
   fi
  fi
  # real-world sequences
  bench_file="$bench_dir/soc-twitter-follows_""$algo""_""$repeats""_""$spe""_""$p"
  "$benchmark_executable" file "degseqs/soc-twitter-follows" "$p" "$repeats" "$algo" "$spe" verbose >> "$bench_file"
  # artificial sequences
  for n in 16 20 24 28 ; do
   # random-graph-sequences
   for d in 2 5 10 ; do
    bench_file="$bench_dir/random_""$n""_""$d""_""$algo""_""$repeats""_""$spe""_""$p"
    "$benchmark_executable" random "$n" "$d" "$p" "$repeats" "$algo" "$spe" verbose >> "$bench_file"
   done
   # powerlaw-sequences
   for g in "3" "2.5" "2.3" "2.2" "2.1" "2" ; do
    for d in 1 2 5 10 ; do
     bench_file="$bench_dir/powerlaw_""$n""_""$g""_""$d""_""$algo""_""$repeats""_""$spe""_""$p"
     "$benchmark_executable" powerlaw "$n" "$g" "$d" "$p" "$repeats" "$algo" "$spe" verbose >> "$bench_file"
    done
   done
  done
 done
done

